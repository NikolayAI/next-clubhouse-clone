{"version":3,"file":"effector-react.mjs","sources":["effector-react/createWatch.ts","effector-react/withDisplayName.ts","effector-react/apiBase.ts","effector-react/nossr.ts","effector-react/createComponent.ts","effector-react/createStoreConsumer.ts","effector-react/createGate.ts","effector-react/useIsomorphicLayoutEffect.ts","effector-react/throw.ts","effector-react/deprecate.ts","effector-react/createContextComponent.ts","effector-react/connect.ts","effector-react/createReactState.ts"],"sourcesContent":["import {Store, clearNode, step, createNode, Scope, Node} from 'effector'\n\nexport function createWatch<T>(\n  store: Store<T>,\n  fn: (value: T) => any,\n  scope?: Scope,\n) {\n  const seq = [step.run({fn: value => fn(value)})]\n  if (scope) {\n    const node = createNode({node: seq})\n    const id = (store as any).graphite.id\n    const scopeLinks: {[_: string]: Node[]} = (scope as any).additionalLinks\n    const links = scopeLinks[id] || []\n    scopeLinks[id] = links\n    links.push(node)\n    return () => {\n      const idx = links.indexOf(node)\n      if (idx !== -1) links.splice(idx, 1)\n      clearNode(node)\n    }\n  } else {\n    const node = createNode({\n      node: seq,\n      parent: [store],\n      family: {owners: store},\n    })\n    return () => {\n      clearNode(node)\n    }\n  }\n}\n","export function withDisplayName(name: string, Component: any) {\n  Component.displayName = name\n  return Component\n}\n","import {Store, is, Scope} from 'effector'\nimport React from 'react'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {throwError} from './throw'\nimport {createWatch} from './createWatch'\nimport {withDisplayName} from './withDisplayName'\n\nconst stateReader = <T>(store: Store<T>, scope?: Scope) =>\n  scope ? scope.getState(store) : store.getState()\nconst basicUpdateFilter = <T>(upd: T, oldValue: T) => upd !== oldValue\nconst createNotifier = () =>\n  React.useReducer((n: any, action: void) => n + 1, 0)[1]\n\nexport function useStoreBase<State>(store: Store<State>, scope?: Scope) {\n  if (!is.store(store)) throwError('expect useStore argument to be a store')\n\n  const currentValue = stateReader(store, scope)\n  const inc = createNotifier()\n  const currentStore = React.useRef({\n    store,\n    value: currentValue,\n    pending: false,\n  })\n  useIsomorphicLayoutEffect(() => {\n    const stop = createWatch(\n      store,\n      upd => {\n        const ref = currentStore.current\n        if (!ref.pending) {\n          ref.value = upd\n          ref.pending = true\n          inc()\n          ref.pending = false\n        }\n      },\n      scope,\n    )\n    const newValue = stateReader(store, scope)\n    const ref = currentStore.current\n    if (ref.store === store && ref.value !== newValue) {\n      ref.value = newValue\n      ref.pending = true\n      inc()\n      ref.pending = false\n    }\n    ref.store = store\n    return stop\n  }, [store, scope])\n  return currentValue\n}\n\nexport function useStoreMapBase<State, Result, Keys extends ReadonlyArray<any>>(\n  [configOrStore, separateFn]: [\n    configOrStore:\n      | {\n          store: Store<State>\n          keys: Keys\n          fn(state: State, keys: Keys): Result\n          updateFilter?: (update: Result, current: Result) => boolean\n        }\n      | Store<State>,\n    separateFn?: (state: State, keys: Keys) => Result,\n  ],\n  scope?: Scope,\n): Result {\n  let fn: (state: State, keys: Keys) => Result\n  let updateFilter: (update: Result, current: Result) => boolean =\n    basicUpdateFilter\n  let store: Store<State>\n  let keys: Keys\n  if (separateFn) {\n    fn = separateFn\n    store = configOrStore as Store<State>\n    keys = [] as unknown as Keys\n  } else {\n    fn = (configOrStore as any).fn\n    store = (configOrStore as any).store\n    keys = (configOrStore as any).keys\n    updateFilter = (configOrStore as any).updateFilter || basicUpdateFilter\n  }\n  if (!is.store(store)) throwError('useStoreMap expects a store')\n  if (!Array.isArray(keys)) throwError('useStoreMap expects an array as keys')\n  if (typeof fn !== 'function') throwError('useStoreMap expects a function')\n  const result = React.useRef<{\n    fn: (state: State, keys: Keys) => Result\n    upd: (update: Result, current: Result) => boolean\n    val: Result\n    init: boolean\n    store: Store<State>\n  }>({} as any)\n  const refState = result.current\n  refState.fn = fn\n  refState.upd = updateFilter\n  refState.init = refState.store === store\n  refState.store = store\n  const inc = createNotifier()\n  const deps = [scope, ...keys]\n  const stop = React.useMemo(() => {\n    updateRef(stateReader(store, scope), keys, result.current)\n    return createWatch(\n      store,\n      val => updateRef(val, keys, result.current, inc),\n      scope,\n    )\n  }, deps)\n  useIsomorphicLayoutEffect(() => () => stop(), deps)\n  return refState.val\n}\nfunction updateRef<State, Keys, Result>(\n  sourceValue: State,\n  keys: Keys,\n  refState: {\n    fn: (state: State, keys: Keys) => Result\n    upd: (update: Result, current: Result) => boolean\n    val: Result\n    init: boolean\n  },\n  inc?: React.DispatchWithoutAction,\n) {\n  const newValue = refState.fn(sourceValue, keys)\n  if (!refState.init) {\n    refState.val = newValue\n    refState.init = true\n  } else {\n    if (\n      newValue !== undefined &&\n      basicUpdateFilter(newValue, refState.val) &&\n      refState.upd(newValue, refState.val)\n    ) {\n      refState.val = newValue\n      inc && inc()\n    }\n  }\n}\nexport function useListBase<T>(\n  list: Store<T[]>,\n  renderItem:\n    | {\n        keys?: any[]\n        fn(item: T, index: number): React.ReactNode\n        getKey?: (item: T) => string\n      }\n    | ((item: T, index: number) => React.ReactNode),\n  scope?: Scope,\n): React.ReactNode {\n  let keys = [] as any[]\n  let fn\n  let getKey: (item: T) => string\n  if (typeof renderItem === 'object' && renderItem !== null) {\n    if (renderItem.keys) keys = renderItem.keys\n    fn = renderItem.fn\n    if (renderItem.getKey) getKey = renderItem.getKey\n  } else {\n    fn = renderItem\n  }\n  if (!is.store(list)) throwError('expect useList first argument to be a store')\n  if (typeof fn !== 'function')\n    throwError(\"expect useList's renderItem to be a function\")\n  if (!Array.isArray(keys)) throwError(\"expect useList's keys to be an array\")\n  const Item = React.useMemo(() => {\n    const Item = withDisplayName(\n      `${list.shortName || 'Unknown'}.Item`,\n      (\n        props:\n          | {index: number; keys: any[]; keyVal: never; value: never}\n          | {index: never; keys: any[]; keyVal: string; value: T},\n      ) => {\n        const {index, keys, keyVal, value} = props\n        const isKeyed = !!fnRef.current[1]\n        if (isKeyed) {\n          return fnRef.current[0](value, keyVal as any)\n        }\n        const item = useStoreMapBase(\n          [\n            {\n              store: list,\n              keys: [index, ...keys],\n              fn: (list, keys) => list[keys[0]],\n            },\n          ],\n          scope,\n        )\n        return fnRef.current[0](item, index)\n      },\n    )\n    return React.memo(Item)\n  }, [list, scope, !!getKey!])\n  const fnRef = React.useRef([fn, getKey!] as const)\n  fnRef.current = [fn, getKey!]\n  const keysSelfMemo = React.useMemo(() => keys, keys)\n  if (getKey!) {\n    return useStoreBase(list, scope).map(value => {\n      const key = fnRef.current[1](value)\n      return React.createElement(Item, {\n        keyVal: key,\n        key,\n        keys: keysSelfMemo,\n        value,\n      })\n    })\n  } else {\n    const length = useStoreMapBase(\n      [\n        {\n          store: list,\n          keys: [list],\n          fn: list => list.length,\n        },\n      ],\n      scope,\n    )\n    return Array.from({length}, (_, i) =>\n      React.createElement(Item, {\n        index: i,\n        key: i,\n        keys: keysSelfMemo,\n      }),\n    )\n  }\n}\n","import {Event, Store} from 'effector'\nimport {useStoreBase, useStoreMapBase, useListBase} from './apiBase'\n\n/**\nbind event to scope\n\nworks like React.useCallback, but for scopes\n*/\nexport function useEvent<T>(event: Event<T>): (payload: T) => T {\n  return event\n}\n\nexport function useStore<State>(store: Store<State>): State {\n  return useStoreBase(store)\n}\n\nexport function useStoreMap<State, Result, Keys extends ReadonlyArray<any>>(\n  configOrStore:\n    | {\n        store: Store<State>\n        keys: Keys\n        fn(state: State, keys: Keys): Result\n        updateFilter?: (update: Result, current: Result) => boolean\n      }\n    | Store<State>,\n  separateFn?: (state: State, keys: Keys) => Result,\n): Result {\n  return useStoreMapBase([configOrStore, separateFn])\n}\n\nexport function useList<T>(\n  list: Store<T[]>,\n  renderItem:\n    | {\n        keys?: any[]\n        fn(item: T, index: number): React.ReactNode\n        getKey?: (item: T) => string\n      }\n    | ((item: T, index: number) => React.ReactNode),\n): React.ReactNode {\n  return useListBase(list, renderItem)\n}\n","import React from 'react'\nimport {Store, is, combine, createEvent} from 'effector'\nimport {useStore} from './nossr'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {StoreView} from './index.h'\nimport {withDisplayName} from './withDisplayName'\nimport {throwError} from './throw'\n\nexport function createComponent<Props, State>(\n  shape: Store<State> | {[key: string]: Store<any> | any},\n  renderProp: (props: Props, state: State) => React.ReactNode,\n): StoreView<State, Props> {\n  let store: Store<any>\n  if (is.store(shape)) {\n    store = shape\n  } else {\n    if (typeof shape === 'object' && shape !== null) {\n      store = combine(shape)\n    } else throwError('shape should be a store or object with stores')\n  }\n  let storeName = 'Unknown'\n  //@ts-ignore\n  if (store && store.shortName) {\n    storeName = store.shortName\n  }\n  const mounted = createEvent<any>()\n  const unmounted = createEvent<any>()\n\n  function RenderComponent(props: Props) {\n    const propsRef = React.useRef(props)\n    const state = useStore(store)\n    useIsomorphicLayoutEffect(() => {\n      mounted({props: propsRef.current, state: store.getState()})\n      return () => {\n        unmounted({props: propsRef.current, state: store.getState()})\n      }\n    }, [])\n    const result = renderProp(props, state)\n    propsRef.current = props\n    return result\n  }\n  RenderComponent.mounted = mounted\n  RenderComponent.unmounted = unmounted\n  return withDisplayName(`${storeName}.View`, RenderComponent)\n}\n","import {Store} from 'effector'\n\nimport {StoreConsumer} from './index.h'\nimport {createComponent} from './createComponent'\n\nexport function createStoreConsumer<State>(\n  store: Store<State>,\n): StoreConsumer<State> {\n  return createComponent(store, ({children}, state) => children(state))\n}\n","import React from 'react'\nimport {createStore, launch, Store, Domain, createEvent} from 'effector'\nimport {Gate} from './index.h'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {withDisplayName} from './withDisplayName'\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n) {\n  const propsRef = React.useRef<{value: any; count: number}>({\n    value: null,\n    count: 0,\n  })\n  useIsomorphicLayoutEffect(() => {\n    GateComponent.open(propsRef.current.value)\n    return () => GateComponent.close(propsRef.current.value) as any\n  }, [GateComponent])\n  if (!shallowCompare(propsRef.current.value, props)) {\n    propsRef.current.value = props\n    propsRef.current.count += 1\n  }\n  useIsomorphicLayoutEffect(() => {\n    GateComponent.set(propsRef.current.value)\n  }, [propsRef.current.count])\n}\n\nfunction shallowCompare(a: any, b: any) {\n  if (a === b) return true\n  if (\n    typeof a === 'object' &&\n    a !== null &&\n    typeof b === 'object' &&\n    b !== null\n  ) {\n    const aKeys = Object.keys(a)\n    const bKeys = Object.keys(b)\n    if (aKeys.length !== bKeys.length) return false\n    for (let i = 0; i < aKeys.length; i++) {\n      const key = aKeys[i]\n      if (a[key] !== b[key]) return false\n    }\n    return true\n  }\n  return false\n}\nexport function createGateImplementation<State>({\n  name = 'gate',\n  domain,\n  defaultState,\n  hook: useGateHook,\n}: {\n  name?: string\n  domain?: Domain\n  defaultState: State | {}\n  hook: typeof useGate\n}): Gate<State> {\n  const fullName = `${domain ? `${domain.compositeName.fullName}/` : ''}${name}`\n  const set = createEvent<State>(`${fullName}.set`)\n  const open = createEvent<State>(`${fullName}.open`)\n  const close = createEvent<State>(`${fullName}.close`)\n  const status = createStore(Boolean(false), {\n    name: `${fullName}.status`,\n  })\n    .on(open, () => Boolean(true))\n    .on(close, () => Boolean(false))\n  const state = createStore(defaultState as State, {\n    name: `${fullName}.state`,\n  })\n    .on(set, (_, state) => state)\n    .reset(close)\n  if (domain) {\n    const {hooks} = domain as any\n    launch({\n      target: [\n        hooks.store,\n        hooks.store,\n        hooks.event,\n        hooks.event,\n        hooks.event,\n      ] as any,\n      params: [status, state, open, close, set],\n    })\n  }\n  function GateComponent(props: State) {\n    useGateHook(GateComponent as any, props)\n    return null\n  }\n  GateComponent.open = open\n  GateComponent.close = close\n  GateComponent.status = status\n  GateComponent.state = state\n  GateComponent.set = set\n  return withDisplayName(`Gate:${fullName}`, GateComponent)\n}\nexport function createGate<Props>(\n  name: string = 'gate',\n  defaultState: Props = {} as any,\n): Gate<Props> {\n  let domain\n  if (typeof name === 'object' && name !== null) {\n    if ('defaultState' in name) {\n      //@ts-ignore\n      defaultState = name.defaultState\n    }\n    //@ts-ignore\n    if (name.domain) domain = name.domain\n    //@ts-ignore\n    name = name.name\n  }\n  return createGateImplementation({\n    name,\n    domain,\n    defaultState,\n    hook: useGate,\n  })\n}\n","import React from 'react'\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n","export const throwError = (message: string) => {\n  throw Error(message)\n}\n","export const deprecate = (method: string) =>\n  console.error(`${method} is deprecated`)\n","import React from 'react'\nimport type {Store} from 'effector'\nimport {useStore} from './nossr'\nimport {withDisplayName} from './withDisplayName'\nimport {deprecate} from './deprecate'\n\nexport const createContextComponent = <Props, State, Context>(\n  store: Store<State>,\n  context: React.Context<Context>,\n  renderProp: (props: Props, state: State, context: Context) => React.ReactNode,\n): React.ComponentType<Props> => {\n  deprecate('createContextComponent')\n  return withDisplayName(\n    `${store.shortName || 'Unknown'}.ContextComponent`,\n    (props: any) => {\n      const ctx = React.useContext(context)\n      const state = useStore(store)\n      return renderProp(props, state, ctx)\n    },\n  )\n}\n","import React from 'react'\n\nimport type {Store} from 'effector'\nimport {useStore} from './nossr'\nimport {withDisplayName} from './withDisplayName'\n\nexport const connect =\n  <State>(Component: React.ComponentType<any>) =>\n  (store: Store<State>) => {\n    let View: any = Component\n    if (typeof Component !== 'function') {\n      View = store\n      store = Component as any\n    }\n    const wrappedComponentName = View.displayName || View.name || 'Unknown'\n    return withDisplayName(`Connect(${wrappedComponentName})`, (props: any) =>\n      React.createElement(View, {...props, ...useStore(store)}),\n    )\n  }\n","import type {ComponentType} from 'react'\nimport type {Store} from 'effector'\n\nimport {connect} from './connect'\nimport {deprecate} from './deprecate'\n\nexport const createReactState = (\n  store: Store<any>,\n  View: ComponentType<any>,\n) => {\n  deprecate('createReactState')\n  return connect(View)(store)\n}\n"],"names":["createWatch","store","fn","scope","seq","step","run","value","node","createNode","id","graphite","scopeLinks","additionalLinks","links","push","idx","indexOf","splice","clearNode","parent","family","owners","withDisplayName","name","Component","displayName","useStoreBase","is","throwError","currentValue","stateReader","inc","createNotifier","currentStore","React","useRef","pending","useIsomorphicLayoutEffect","stop","upd","ref","current","newValue","useStoreMapBase","configOrStore","separateFn","keys","updateFilter","basicUpdateFilter","Array","isArray","result","refState","init","deps","useMemo","updateRef","val","sourceValue","undefined","useEvent","event","useStore","useStoreMap","useList","list","renderItem","getKey","Item","shortName","props","index","keyVal","fnRef","item","memo","keysSelfMemo","map","key","createElement","length","from","_","i","useListBase","createComponent","shape","renderProp","RenderComponent","propsRef","state","mounted","getState","unmounted","combine","storeName","createEvent","createStoreConsumer","children","useGate","GateComponent","count","open","close","a","b","aKeys","Object","bKeys","shallowCompare","set","createGate","defaultState","domain","hook","useGateHook","fullName","compositeName","status","createStore","Boolean","on","reset","hooks","launch","target","params","createGateImplementation","window","useLayoutEffect","useEffect","message","Error","oldValue","useReducer","n","deprecate","method","console","error","createContextComponent","context","ctx","useContext","connect","View","createReactState"],"mappings":"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"}