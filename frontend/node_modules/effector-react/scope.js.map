{"version":3,"file":"scope.js","sources":["effector-react/createWatch.ts","effector-react/withDisplayName.ts","effector-react/apiBase.ts","effector-react/ssr.ts","effector-react/createGate.ts","effector-react/useIsomorphicLayoutEffect.ts","effector-react/throw.ts","effector-react/deprecate.ts"],"sourcesContent":["import {Store, clearNode, step, createNode, Scope, Node} from 'effector'\n\nexport function createWatch<T>(\n  store: Store<T>,\n  fn: (value: T) => any,\n  scope?: Scope,\n) {\n  const seq = [step.run({fn: value => fn(value)})]\n  if (scope) {\n    const node = createNode({node: seq})\n    const id = (store as any).graphite.id\n    const scopeLinks: {[_: string]: Node[]} = (scope as any).additionalLinks\n    const links = scopeLinks[id] || []\n    scopeLinks[id] = links\n    links.push(node)\n    return () => {\n      const idx = links.indexOf(node)\n      if (idx !== -1) links.splice(idx, 1)\n      clearNode(node)\n    }\n  } else {\n    const node = createNode({\n      node: seq,\n      parent: [store],\n      family: {owners: store},\n    })\n    return () => {\n      clearNode(node)\n    }\n  }\n}\n","export function withDisplayName(name: string, Component: any) {\n  Component.displayName = name\n  return Component\n}\n","import {Store, is, Scope} from 'effector'\nimport React from 'react'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {throwError} from './throw'\nimport {createWatch} from './createWatch'\nimport {withDisplayName} from './withDisplayName'\n\nconst stateReader = <T>(store: Store<T>, scope?: Scope) =>\n  scope ? scope.getState(store) : store.getState()\nconst basicUpdateFilter = <T>(upd: T, oldValue: T) => upd !== oldValue\nconst createNotifier = () =>\n  React.useReducer((n: any, action: void) => n + 1, 0)[1]\n\nexport function useStoreBase<State>(store: Store<State>, scope?: Scope) {\n  if (!is.store(store)) throwError('expect useStore argument to be a store')\n\n  const currentValue = stateReader(store, scope)\n  const inc = createNotifier()\n  const currentStore = React.useRef({\n    store,\n    value: currentValue,\n    pending: false,\n  })\n  useIsomorphicLayoutEffect(() => {\n    const stop = createWatch(\n      store,\n      upd => {\n        const ref = currentStore.current\n        if (!ref.pending) {\n          ref.value = upd\n          ref.pending = true\n          inc()\n          ref.pending = false\n        }\n      },\n      scope,\n    )\n    const newValue = stateReader(store, scope)\n    const ref = currentStore.current\n    if (ref.store === store && ref.value !== newValue) {\n      ref.value = newValue\n      ref.pending = true\n      inc()\n      ref.pending = false\n    }\n    ref.store = store\n    return stop\n  }, [store, scope])\n  return currentValue\n}\n\nexport function useStoreMapBase<State, Result, Keys extends ReadonlyArray<any>>(\n  [configOrStore, separateFn]: [\n    configOrStore:\n      | {\n          store: Store<State>\n          keys: Keys\n          fn(state: State, keys: Keys): Result\n          updateFilter?: (update: Result, current: Result) => boolean\n        }\n      | Store<State>,\n    separateFn?: (state: State, keys: Keys) => Result,\n  ],\n  scope?: Scope,\n): Result {\n  let fn: (state: State, keys: Keys) => Result\n  let updateFilter: (update: Result, current: Result) => boolean =\n    basicUpdateFilter\n  let store: Store<State>\n  let keys: Keys\n  if (separateFn) {\n    fn = separateFn\n    store = configOrStore as Store<State>\n    keys = [] as unknown as Keys\n  } else {\n    fn = (configOrStore as any).fn\n    store = (configOrStore as any).store\n    keys = (configOrStore as any).keys\n    updateFilter = (configOrStore as any).updateFilter || basicUpdateFilter\n  }\n  if (!is.store(store)) throwError('useStoreMap expects a store')\n  if (!Array.isArray(keys)) throwError('useStoreMap expects an array as keys')\n  if (typeof fn !== 'function') throwError('useStoreMap expects a function')\n  const result = React.useRef<{\n    fn: (state: State, keys: Keys) => Result\n    upd: (update: Result, current: Result) => boolean\n    val: Result\n    init: boolean\n    store: Store<State>\n  }>({} as any)\n  const refState = result.current\n  refState.fn = fn\n  refState.upd = updateFilter\n  refState.init = refState.store === store\n  refState.store = store\n  const inc = createNotifier()\n  const deps = [scope, ...keys]\n  const stop = React.useMemo(() => {\n    updateRef(stateReader(store, scope), keys, result.current)\n    return createWatch(\n      store,\n      val => updateRef(val, keys, result.current, inc),\n      scope,\n    )\n  }, deps)\n  useIsomorphicLayoutEffect(() => () => stop(), deps)\n  return refState.val\n}\nfunction updateRef<State, Keys, Result>(\n  sourceValue: State,\n  keys: Keys,\n  refState: {\n    fn: (state: State, keys: Keys) => Result\n    upd: (update: Result, current: Result) => boolean\n    val: Result\n    init: boolean\n  },\n  inc?: React.DispatchWithoutAction,\n) {\n  const newValue = refState.fn(sourceValue, keys)\n  if (!refState.init) {\n    refState.val = newValue\n    refState.init = true\n  } else {\n    if (\n      newValue !== undefined &&\n      basicUpdateFilter(newValue, refState.val) &&\n      refState.upd(newValue, refState.val)\n    ) {\n      refState.val = newValue\n      inc && inc()\n    }\n  }\n}\nexport function useListBase<T>(\n  list: Store<T[]>,\n  renderItem:\n    | {\n        keys?: any[]\n        fn(item: T, index: number): React.ReactNode\n        getKey?: (item: T) => string\n      }\n    | ((item: T, index: number) => React.ReactNode),\n  scope?: Scope,\n): React.ReactNode {\n  let keys = [] as any[]\n  let fn\n  let getKey: (item: T) => string\n  if (typeof renderItem === 'object' && renderItem !== null) {\n    if (renderItem.keys) keys = renderItem.keys\n    fn = renderItem.fn\n    if (renderItem.getKey) getKey = renderItem.getKey\n  } else {\n    fn = renderItem\n  }\n  if (!is.store(list)) throwError('expect useList first argument to be a store')\n  if (typeof fn !== 'function')\n    throwError(\"expect useList's renderItem to be a function\")\n  if (!Array.isArray(keys)) throwError(\"expect useList's keys to be an array\")\n  const Item = React.useMemo(() => {\n    const Item = withDisplayName(\n      `${list.shortName || 'Unknown'}.Item`,\n      (\n        props:\n          | {index: number; keys: any[]; keyVal: never; value: never}\n          | {index: never; keys: any[]; keyVal: string; value: T},\n      ) => {\n        const {index, keys, keyVal, value} = props\n        const isKeyed = !!fnRef.current[1]\n        if (isKeyed) {\n          return fnRef.current[0](value, keyVal as any)\n        }\n        const item = useStoreMapBase(\n          [\n            {\n              store: list,\n              keys: [index, ...keys],\n              fn: (list, keys) => list[keys[0]],\n            },\n          ],\n          scope,\n        )\n        return fnRef.current[0](item, index)\n      },\n    )\n    return React.memo(Item)\n  }, [list, scope, !!getKey!])\n  const fnRef = React.useRef([fn, getKey!] as const)\n  fnRef.current = [fn, getKey!]\n  const keysSelfMemo = React.useMemo(() => keys, keys)\n  if (getKey!) {\n    return useStoreBase(list, scope).map(value => {\n      const key = fnRef.current[1](value)\n      return React.createElement(Item, {\n        keyVal: key,\n        key,\n        keys: keysSelfMemo,\n        value,\n      })\n    })\n  } else {\n    const length = useStoreMapBase(\n      [\n        {\n          store: list,\n          keys: [list],\n          fn: list => list.length,\n        },\n      ],\n      scope,\n    )\n    return Array.from({length}, (_, i) =>\n      React.createElement(Item, {\n        index: i,\n        key: i,\n        keys: keysSelfMemo,\n      }),\n    )\n  }\n}\n","import React from 'react'\nimport {Domain, is, Scope, Store, scopeBind} from 'effector'\nimport {useStoreBase, useStoreMapBase, useListBase} from './apiBase'\nimport {withDisplayName} from './withDisplayName'\nimport {useGate as commonUseGate, createGateImplementation} from './createGate'\nimport type {Gate} from './index.h'\nimport {throwError} from './throw'\nimport {deprecate} from './deprecate'\n\nconst ScopeContext = React.createContext(null as Scope | null)\nexport const {Provider} = ScopeContext\nfunction getScope() {\n  const scope = React.useContext(ScopeContext)\n  if (!scope)\n    throwError('No scope found, consider adding <Provider> to app root')\n  return scope as Scope\n}\n\nexport function createGate<Props>(\n  config: {\n    domain?: Domain\n    defaultState?: Props\n    name?: string\n  } = {},\n) {\n  return createGateImplementation({\n    domain: config.domain,\n    name: config.name,\n    defaultState: 'defaultState' in config ? config.defaultState : {},\n    hook: useGate,\n  })\n}\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n) {\n  const [open, close, set] = useEvent([\n    GateComponent.open,\n    GateComponent.close,\n    GateComponent.set,\n  ])\n  const ForkedGate = React.useMemo(\n    () =>\n      ({\n        open,\n        close,\n        set,\n      } as Gate<Props>),\n    [GateComponent, open],\n  )\n  commonUseGate(ForkedGate, props)\n}\n\nexport function createStoreConsumer(store: any) {\n  return (props: any) => {\n    const state = useStore(store)\n    return props.children(state)\n  }\n}\n\nexport const createContextComponent = (\n  store: any,\n  context: any,\n  renderProp: any,\n) => {\n  deprecate('createContextComponent')\n  return (props: any) => {\n    const ctx = React.useContext(context)\n    const state = useStore(store)\n    return renderProp(props, state, ctx)\n  }\n}\n\nexport const createComponent = (shape: any) => throwError('not implemented')\n\nexport const createReactState = (store: any, Component: any) => {\n  deprecate('createReactState')\n  return connect(Component)(store)\n}\n\nexport const connect = (Component: any) => (store: any) => {\n  let View: any = Component\n  if (typeof Component !== 'function') {\n    View = store\n    store = Component as any\n  }\n  const wrappedComponentName = View.displayName || View.name || 'Unknown'\n  return withDisplayName(`Connect(${wrappedComponentName})`, (props: any) =>\n    React.createElement(View, {...props, ...(useStore(store) as any)}),\n  )\n}\n\n/** useStore wrapper for scopes */\nexport function useStore<T>(store: Store<T>): T {\n  return useStoreBase(store, getScope())\n}\n/** useList wrapper for scopes */\nexport function useList(store: any, opts: any) {\n  return useListBase(store, opts, getScope())\n}\n/** useStoreMap wrapper for scopes */\nexport function useStoreMap(configOrStore: any, separateFn: any) {\n  const scope = getScope()\n  if (separateFn) return useStoreMapBase([configOrStore, separateFn], scope)\n  return useStoreMapBase(\n    [\n      {\n        store: configOrStore.store,\n        keys: configOrStore.keys,\n        fn: configOrStore.fn,\n        updateFilter: configOrStore.updateFilter,\n      },\n    ],\n    scope,\n  )\n}\n\n/**\nbind event to scope\n\nworks like React.useCallback, but for scopes\n*/\nexport function useEvent(eventObject: any) {\n  const scope = getScope()\n  const isShape = !is.unit(eventObject) && typeof eventObject === 'object'\n  const events = isShape ? eventObject : {event: eventObject}\n\n  return React.useMemo(() => {\n    if (is.unit(eventObject)) {\n      //@ts-expect-error\n      return scopeBind(eventObject, {scope})\n    }\n    const shape = Array.isArray(eventObject) ? [] : ({} as any)\n    for (const key in eventObject) {\n      shape[key] = scopeBind(eventObject[key], {scope})\n    }\n    return shape\n  }, [scope, ...Object.keys(events), ...Object.values(events)])\n}\n","import React from 'react'\nimport {createStore, launch, Store, Domain, createEvent} from 'effector'\nimport {Gate} from './index.h'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {withDisplayName} from './withDisplayName'\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n) {\n  const propsRef = React.useRef<{value: any; count: number}>({\n    value: null,\n    count: 0,\n  })\n  useIsomorphicLayoutEffect(() => {\n    GateComponent.open(propsRef.current.value)\n    return () => GateComponent.close(propsRef.current.value) as any\n  }, [GateComponent])\n  if (!shallowCompare(propsRef.current.value, props)) {\n    propsRef.current.value = props\n    propsRef.current.count += 1\n  }\n  useIsomorphicLayoutEffect(() => {\n    GateComponent.set(propsRef.current.value)\n  }, [propsRef.current.count])\n}\n\nfunction shallowCompare(a: any, b: any) {\n  if (a === b) return true\n  if (\n    typeof a === 'object' &&\n    a !== null &&\n    typeof b === 'object' &&\n    b !== null\n  ) {\n    const aKeys = Object.keys(a)\n    const bKeys = Object.keys(b)\n    if (aKeys.length !== bKeys.length) return false\n    for (let i = 0; i < aKeys.length; i++) {\n      const key = aKeys[i]\n      if (a[key] !== b[key]) return false\n    }\n    return true\n  }\n  return false\n}\nexport function createGateImplementation<State>({\n  name = 'gate',\n  domain,\n  defaultState,\n  hook: useGateHook,\n}: {\n  name?: string\n  domain?: Domain\n  defaultState: State | {}\n  hook: typeof useGate\n}): Gate<State> {\n  const fullName = `${domain ? `${domain.compositeName.fullName}/` : ''}${name}`\n  const set = createEvent<State>(`${fullName}.set`)\n  const open = createEvent<State>(`${fullName}.open`)\n  const close = createEvent<State>(`${fullName}.close`)\n  const status = createStore(Boolean(false), {\n    name: `${fullName}.status`,\n  })\n    .on(open, () => Boolean(true))\n    .on(close, () => Boolean(false))\n  const state = createStore(defaultState as State, {\n    name: `${fullName}.state`,\n  })\n    .on(set, (_, state) => state)\n    .reset(close)\n  if (domain) {\n    const {hooks} = domain as any\n    launch({\n      target: [\n        hooks.store,\n        hooks.store,\n        hooks.event,\n        hooks.event,\n        hooks.event,\n      ] as any,\n      params: [status, state, open, close, set],\n    })\n  }\n  function GateComponent(props: State) {\n    useGateHook(GateComponent as any, props)\n    return null\n  }\n  GateComponent.open = open\n  GateComponent.close = close\n  GateComponent.status = status\n  GateComponent.state = state\n  GateComponent.set = set\n  return withDisplayName(`Gate:${fullName}`, GateComponent)\n}\nexport function createGate<Props>(\n  name: string = 'gate',\n  defaultState: Props = {} as any,\n): Gate<Props> {\n  let domain\n  if (typeof name === 'object' && name !== null) {\n    if ('defaultState' in name) {\n      //@ts-ignore\n      defaultState = name.defaultState\n    }\n    //@ts-ignore\n    if (name.domain) domain = name.domain\n    //@ts-ignore\n    name = name.name\n  }\n  return createGateImplementation({\n    name,\n    domain,\n    defaultState,\n    hook: useGate,\n  })\n}\n","import React from 'react'\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n","export const throwError = (message: string) => {\n  throw Error(message)\n}\n","export const deprecate = (method: string) =>\n  console.error(`${method} is deprecated`)\n"],"names":["createWatch","store","fn","scope","seq","step","run","value","node","createNode","id","graphite","scopeLinks","additionalLinks","links","push","idx","indexOf","splice","clearNode","parent","family","owners","withDisplayName","name","Component","displayName","useStoreBase","is","throwError","currentValue","stateReader","inc","createNotifier","currentStore","React","useRef","pending","useIsomorphicLayoutEffect","stop","upd","ref","current","newValue","useStoreMapBase","configOrStore","separateFn","keys","updateFilter","basicUpdateFilter","Array","isArray","result","refState","init","deps","useMemo","updateRef","val","sourceValue","undefined","getScope","useContext","ScopeContext","useGate","GateComponent","props","open","close","set","useEvent","propsRef","count","a","b","aKeys","Object","bKeys","length","i","key","shallowCompare","commonUseGate","useStore","eventObject","events","unit","event","scopeBind","shape","values","window","useLayoutEffect","useEffect","message","Error","getState","oldValue","useReducer","n","deprecate","method","console","error","createContext","Provider","connect","View","createElement","context","renderProp","ctx","state","config","domain","defaultState","hook","useGateHook","fullName","compositeName","createEvent","status","createStore","Boolean","on","_","reset","hooks","launch","target","params","createGateImplementation","children","opts","list","renderItem","getKey","Item","shortName","index","keyVal","fnRef","item","memo","keysSelfMemo","map","from","useListBase"],"mappings":"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"}